//------------------------------------------------------------------------------
// <auto-generated>
//    Этот код был создан из шаблона.
//
//    Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//    Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region Метаданные связи EDM

[assembly: EdmRelationshipAttribute("AlcoStoreDBModel", "FK_Контрагент_Банк", "Bank", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlcoStore.Web.Bank), "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlcoStore.Web.Contractor), true)]
[assembly: EdmRelationshipAttribute("AlcoStoreDBModel", "FK_Накладная_Контрагент", "Contractor", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlcoStore.Web.Contractor), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlcoStore.Web.Transaction), true)]
[assembly: EdmRelationshipAttribute("AlcoStoreDBModel", "FK_Накладная_Склад_Товар_Товар", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlcoStore.Web.Product), "Transaction_Warehouse_Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlcoStore.Web.Transaction_Warehouse_Product), true)]
[assembly: EdmRelationshipAttribute("AlcoStoreDBModel", "FK_Склад_Товар", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlcoStore.Web.Product), "Warehouse", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlcoStore.Web.Warehouse), true)]
[assembly: EdmRelationshipAttribute("AlcoStoreDBModel", "FK_Завхоз_Складовщики", "Workers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlcoStore.Web.Workers), "Steward", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlcoStore.Web.Steward), true)]
[assembly: EdmRelationshipAttribute("AlcoStoreDBModel", "FK_Накладная_Завхоз", "Steward", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlcoStore.Web.Steward), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlcoStore.Web.Transaction), true)]
[assembly: EdmRelationshipAttribute("AlcoStoreDBModel", "FK_Накладная_Накладная_Склад_Товар1", "Transaction_Warehouse_Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlcoStore.Web.Transaction_Warehouse_Product), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AlcoStore.Web.Transaction), true)]
[assembly: EdmRelationshipAttribute("AlcoStoreDBModel", "FK_Накладная_Складовщики", "Workers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AlcoStore.Web.Workers), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AlcoStore.Web.Transaction), true)]

#endregion

namespace AlcoStore.Web
{
    #region Контексты
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    public partial class AlcoStoreDBEntities : ObjectContext
    {
        #region Конструкторы
    
        /// <summary>
        /// Инициализирует новый объект AlcoStoreDBEntities, используя строку соединения из раздела "AlcoStoreDBEntities" файла конфигурации приложения.
        /// </summary>
        public AlcoStoreDBEntities() : base("name=AlcoStoreDBEntities", "AlcoStoreDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта AlcoStoreDBEntities.
        /// </summary>
        public AlcoStoreDBEntities(string connectionString) : base(connectionString, "AlcoStoreDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Инициализация нового объекта AlcoStoreDBEntities.
        /// </summary>
        public AlcoStoreDBEntities(EntityConnection connection) : base(connection, "AlcoStoreDBEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Разделяемые методы
    
        partial void OnContextCreated();
    
        #endregion
    
        #region Свойства ObjectSet
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Bank> Bank
        {
            get
            {
                if ((_Bank == null))
                {
                    _Bank = base.CreateObjectSet<Bank>("Bank");
                }
                return _Bank;
            }
        }
        private ObjectSet<Bank> _Bank;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Contractor> Contractor
        {
            get
            {
                if ((_Contractor == null))
                {
                    _Contractor = base.CreateObjectSet<Contractor>("Contractor");
                }
                return _Contractor;
            }
        }
        private ObjectSet<Contractor> _Contractor;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Product> Product
        {
            get
            {
                if ((_Product == null))
                {
                    _Product = base.CreateObjectSet<Product>("Product");
                }
                return _Product;
            }
        }
        private ObjectSet<Product> _Product;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Steward> Steward
        {
            get
            {
                if ((_Steward == null))
                {
                    _Steward = base.CreateObjectSet<Steward>("Steward");
                }
                return _Steward;
            }
        }
        private ObjectSet<Steward> _Steward;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<sysdiagrams> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagrams>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagrams> _sysdiagrams;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Transaction> Transaction
        {
            get
            {
                if ((_Transaction == null))
                {
                    _Transaction = base.CreateObjectSet<Transaction>("Transaction");
                }
                return _Transaction;
            }
        }
        private ObjectSet<Transaction> _Transaction;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Transaction_Warehouse_Product> Transaction_Warehouse_Product
        {
            get
            {
                if ((_Transaction_Warehouse_Product == null))
                {
                    _Transaction_Warehouse_Product = base.CreateObjectSet<Transaction_Warehouse_Product>("Transaction_Warehouse_Product");
                }
                return _Transaction_Warehouse_Product;
            }
        }
        private ObjectSet<Transaction_Warehouse_Product> _Transaction_Warehouse_Product;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Warehouse> Warehouse
        {
            get
            {
                if ((_Warehouse == null))
                {
                    _Warehouse = base.CreateObjectSet<Warehouse>("Warehouse");
                }
                return _Warehouse;
            }
        }
        private ObjectSet<Warehouse> _Warehouse;
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        public ObjectSet<Workers> Workers
        {
            get
            {
                if ((_Workers == null))
                {
                    _Workers = base.CreateObjectSet<Workers>("Workers");
                }
                return _Workers;
            }
        }
        private ObjectSet<Workers> _Workers;

        #endregion

        #region Методы AddTo
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Bank. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToBank(Bank bank)
        {
            base.AddObject("Bank", bank);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Contractor. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToContractor(Contractor contractor)
        {
            base.AddObject("Contractor", contractor);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Product. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToProduct(Product product)
        {
            base.AddObject("Product", product);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Steward. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToSteward(Steward steward)
        {
            base.AddObject("Steward", steward);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet sysdiagrams. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddTosysdiagrams(sysdiagrams sysdiagrams)
        {
            base.AddObject("sysdiagrams", sysdiagrams);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Transaction. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTransaction(Transaction transaction)
        {
            base.AddObject("Transaction", transaction);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Transaction_Warehouse_Product. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToTransaction_Warehouse_Product(Transaction_Warehouse_Product transaction_Warehouse_Product)
        {
            base.AddObject("Transaction_Warehouse_Product", transaction_Warehouse_Product);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Warehouse. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToWarehouse(Warehouse warehouse)
        {
            base.AddObject("Warehouse", warehouse);
        }
    
        /// <summary>
        /// Устаревший метод для добавления новых объектов в набор EntitySet Workers. Взамен можно использовать метод .Add связанного свойства ObjectSet&lt;T&gt;.
        /// </summary>
        public void AddToWorkers(Workers workers)
        {
            base.AddObject("Workers", workers);
        }

        #endregion

    }

    #endregion

    #region Сущности
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="Bank")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bank : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Bank.
        /// </summary>
        /// <param name="mFO">Исходное значение свойства MFO.</param>
        /// <param name="bank_name">Исходное значение свойства Bank_name.</param>
        public static Bank CreateBank(global::System.String mFO, global::System.String bank_name)
        {
            Bank bank = new Bank();
            bank.MFO = mFO;
            bank.Bank_name = bank_name;
            return bank;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MFO
        {
            get
            {
                return _MFO;
            }
            set
            {
                if (_MFO != value)
                {
                    OnMFOChanging(value);
                    ReportPropertyChanging("MFO");
                    _MFO = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("MFO");
                    OnMFOChanged();
                }
            }
        }
        private global::System.String _MFO;
        partial void OnMFOChanging(global::System.String value);
        partial void OnMFOChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bank_name
        {
            get
            {
                return _Bank_name;
            }
            set
            {
                OnBank_nameChanging(value);
                ReportPropertyChanging("Bank_name");
                _Bank_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Bank_name");
                OnBank_nameChanged();
            }
        }
        private global::System.String _Bank_name;
        partial void OnBank_nameChanging(global::System.String value);
        partial void OnBank_nameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Контрагент_Банк", "Contractor")]
        public EntityCollection<Contractor> Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Contractor>("AlcoStoreDBModel.FK_Контрагент_Банк", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Contractor>("AlcoStoreDBModel.FK_Контрагент_Банк", "Contractor", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="Contractor")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Contractor : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Contractor.
        /// </summary>
        /// <param name="contractor_code">Исходное значение свойства Contractor_code.</param>
        /// <param name="contractor_code2">Исходное значение свойства Contractor_code2.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="payer_code">Исходное значение свойства Payer_code.</param>
        /// <param name="current_account">Исходное значение свойства Current_account.</param>
        /// <param name="mFO">Исходное значение свойства MFO.</param>
        public static Contractor CreateContractor(global::System.String contractor_code, global::System.String contractor_code2, global::System.String name, global::System.String payer_code, global::System.String current_account, global::System.String mFO)
        {
            Contractor contractor = new Contractor();
            contractor.Contractor_code = contractor_code;
            contractor.Contractor_code2 = contractor_code2;
            contractor.Name = name;
            contractor.Payer_code = payer_code;
            contractor.Current_account = current_account;
            contractor.MFO = mFO;
            return contractor;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contractor_code
        {
            get
            {
                return _Contractor_code;
            }
            set
            {
                if (_Contractor_code != value)
                {
                    OnContractor_codeChanging(value);
                    ReportPropertyChanging("Contractor_code");
                    _Contractor_code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Contractor_code");
                    OnContractor_codeChanged();
                }
            }
        }
        private global::System.String _Contractor_code;
        partial void OnContractor_codeChanging(global::System.String value);
        partial void OnContractor_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contractor_code2
        {
            get
            {
                return _Contractor_code2;
            }
            set
            {
                OnContractor_code2Changing(value);
                ReportPropertyChanging("Contractor_code2");
                _Contractor_code2 = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contractor_code2");
                OnContractor_code2Changed();
            }
        }
        private global::System.String _Contractor_code2;
        partial void OnContractor_code2Changing(global::System.String value);
        partial void OnContractor_code2Changed();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Payer_code
        {
            get
            {
                return _Payer_code;
            }
            set
            {
                OnPayer_codeChanging(value);
                ReportPropertyChanging("Payer_code");
                _Payer_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Payer_code");
                OnPayer_codeChanged();
            }
        }
        private global::System.String _Payer_code;
        partial void OnPayer_codeChanging(global::System.String value);
        partial void OnPayer_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Current_account
        {
            get
            {
                return _Current_account;
            }
            set
            {
                OnCurrent_accountChanging(value);
                ReportPropertyChanging("Current_account");
                _Current_account = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Current_account");
                OnCurrent_accountChanged();
            }
        }
        private global::System.String _Current_account;
        partial void OnCurrent_accountChanging(global::System.String value);
        partial void OnCurrent_accountChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MFO
        {
            get
            {
                return _MFO;
            }
            set
            {
                OnMFOChanging(value);
                ReportPropertyChanging("MFO");
                _MFO = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MFO");
                OnMFOChanged();
            }
        }
        private global::System.String _MFO;
        partial void OnMFOChanging(global::System.String value);
        partial void OnMFOChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Контрагент_Банк", "Bank")]
        public Bank Bank
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("AlcoStoreDBModel.FK_Контрагент_Банк", "Bank").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("AlcoStoreDBModel.FK_Контрагент_Банк", "Bank").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bank> BankReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bank>("AlcoStoreDBModel.FK_Контрагент_Банк", "Bank");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bank>("AlcoStoreDBModel.FK_Контрагент_Банк", "Bank", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Контрагент", "Transaction")]
        public EntityCollection<Transaction> Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("AlcoStoreDBModel.FK_Накладная_Контрагент", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("AlcoStoreDBModel.FK_Накладная_Контрагент", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Product.
        /// </summary>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="price">Исходное значение свойства Price.</param>
        /// <param name="product_code">Исходное значение свойства Product_code.</param>
        public static Product CreateProduct(global::System.String name, global::System.Double price, global::System.String product_code)
        {
            Product product = new Product();
            product.Name = name;
            product.Price = price;
            product.Product_code = product_code;
            return product;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private global::System.Double _Price;
        partial void OnPriceChanging(global::System.Double value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Product_code
        {
            get
            {
                return _Product_code;
            }
            set
            {
                if (_Product_code != value)
                {
                    OnProduct_codeChanging(value);
                    ReportPropertyChanging("Product_code");
                    _Product_code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Product_code");
                    OnProduct_codeChanged();
                }
            }
        }
        private global::System.String _Product_code;
        partial void OnProduct_codeChanging(global::System.String value);
        partial void OnProduct_codeChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Склад_Товар_Товар", "Transaction_Warehouse_Product")]
        public EntityCollection<Transaction_Warehouse_Product> Transaction_Warehouse_Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction_Warehouse_Product>("AlcoStoreDBModel.FK_Накладная_Склад_Товар_Товар", "Transaction_Warehouse_Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction_Warehouse_Product>("AlcoStoreDBModel.FK_Накладная_Склад_Товар_Товар", "Transaction_Warehouse_Product", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Склад_Товар", "Warehouse")]
        public EntityCollection<Warehouse> Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Warehouse>("AlcoStoreDBModel.FK_Склад_Товар", "Warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Warehouse>("AlcoStoreDBModel.FK_Склад_Товар", "Warehouse", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="Steward")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Steward : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Steward.
        /// </summary>
        /// <param name="steward_code">Исходное значение свойства Steward_code.</param>
        /// <param name="worker_code">Исходное значение свойства Worker_code.</param>
        public static Steward CreateSteward(global::System.String steward_code, global::System.String worker_code)
        {
            Steward steward = new Steward();
            steward.Steward_code = steward_code;
            steward.Worker_code = worker_code;
            return steward;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Steward_code
        {
            get
            {
                return _Steward_code;
            }
            set
            {
                if (_Steward_code != value)
                {
                    OnSteward_codeChanging(value);
                    ReportPropertyChanging("Steward_code");
                    _Steward_code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Steward_code");
                    OnSteward_codeChanged();
                }
            }
        }
        private global::System.String _Steward_code;
        partial void OnSteward_codeChanging(global::System.String value);
        partial void OnSteward_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Worker_code
        {
            get
            {
                return _Worker_code;
            }
            set
            {
                OnWorker_codeChanging(value);
                ReportPropertyChanging("Worker_code");
                _Worker_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Worker_code");
                OnWorker_codeChanged();
            }
        }
        private global::System.String _Worker_code;
        partial void OnWorker_codeChanging(global::System.String value);
        partial void OnWorker_codeChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Завхоз_Складовщики", "Workers")]
        public Workers Workers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workers>("AlcoStoreDBModel.FK_Завхоз_Складовщики", "Workers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workers>("AlcoStoreDBModel.FK_Завхоз_Складовщики", "Workers").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Workers> WorkersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workers>("AlcoStoreDBModel.FK_Завхоз_Складовщики", "Workers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Workers>("AlcoStoreDBModel.FK_Завхоз_Складовщики", "Workers", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Завхоз", "Transaction")]
        public EntityCollection<Transaction> Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("AlcoStoreDBModel.FK_Накладная_Завхоз", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("AlcoStoreDBModel.FK_Накладная_Завхоз", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="sysdiagrams")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagrams : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта sysdiagrams.
        /// </summary>
        /// <param name="name">Исходное значение свойства name.</param>
        /// <param name="principal_id">Исходное значение свойства principal_id.</param>
        /// <param name="diagram_id">Исходное значение свойства diagram_id.</param>
        public static sysdiagrams Createsysdiagrams(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagrams sysdiagrams = new sysdiagrams();
            sysdiagrams.name = name;
            sysdiagrams.principal_id = principal_id;
            sysdiagrams.diagram_id = diagram_id;
            return sysdiagrams;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    
    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Transaction.
        /// </summary>
        /// <param name="transaction_code">Исходное значение свойства Transaction_code.</param>
        /// <param name="transaction_number">Исходное значение свойства Transaction_number.</param>
        /// <param name="date">Исходное значение свойства Date.</param>
        /// <param name="contractor_code">Исходное значение свойства Contractor_code.</param>
        /// <param name="steward_code">Исходное значение свойства Steward_code.</param>
        /// <param name="type_of_transaction">Исходное значение свойства Type_of_transaction.</param>
        /// <param name="worker_code">Исходное значение свойства Worker_code.</param>
        /// <param name="product_code">Исходное значение свойства Product_code.</param>
        /// <param name="number">Исходное значение свойства Number.</param>
        public static Transaction CreateTransaction(global::System.String transaction_code, global::System.String transaction_number, global::System.DateTime date, global::System.String contractor_code, global::System.String steward_code, global::System.String type_of_transaction, global::System.String worker_code, global::System.String product_code, global::System.Int32 number)
        {
            Transaction transaction = new Transaction();
            transaction.Transaction_code = transaction_code;
            transaction.Transaction_number = transaction_number;
            transaction.Date = date;
            transaction.Contractor_code = contractor_code;
            transaction.Steward_code = steward_code;
            transaction.Type_of_transaction = type_of_transaction;
            transaction.Worker_code = worker_code;
            transaction.Product_code = product_code;
            transaction.Number = number;
            return transaction;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Transaction_code
        {
            get
            {
                return _Transaction_code;
            }
            set
            {
                if (_Transaction_code != value)
                {
                    OnTransaction_codeChanging(value);
                    ReportPropertyChanging("Transaction_code");
                    _Transaction_code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Transaction_code");
                    OnTransaction_codeChanged();
                }
            }
        }
        private global::System.String _Transaction_code;
        partial void OnTransaction_codeChanging(global::System.String value);
        partial void OnTransaction_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Transaction_number
        {
            get
            {
                return _Transaction_number;
            }
            set
            {
                OnTransaction_numberChanging(value);
                ReportPropertyChanging("Transaction_number");
                _Transaction_number = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Transaction_number");
                OnTransaction_numberChanged();
            }
        }
        private global::System.String _Transaction_number;
        partial void OnTransaction_numberChanging(global::System.String value);
        partial void OnTransaction_numberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Contractor_code
        {
            get
            {
                return _Contractor_code;
            }
            set
            {
                OnContractor_codeChanging(value);
                ReportPropertyChanging("Contractor_code");
                _Contractor_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Contractor_code");
                OnContractor_codeChanged();
            }
        }
        private global::System.String _Contractor_code;
        partial void OnContractor_codeChanging(global::System.String value);
        partial void OnContractor_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Steward_code
        {
            get
            {
                return _Steward_code;
            }
            set
            {
                OnSteward_codeChanging(value);
                ReportPropertyChanging("Steward_code");
                _Steward_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Steward_code");
                OnSteward_codeChanged();
            }
        }
        private global::System.String _Steward_code;
        partial void OnSteward_codeChanging(global::System.String value);
        partial void OnSteward_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Type_of_transaction
        {
            get
            {
                return _Type_of_transaction;
            }
            set
            {
                OnType_of_transactionChanging(value);
                ReportPropertyChanging("Type_of_transaction");
                _Type_of_transaction = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Type_of_transaction");
                OnType_of_transactionChanged();
            }
        }
        private global::System.String _Type_of_transaction;
        partial void OnType_of_transactionChanging(global::System.String value);
        partial void OnType_of_transactionChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Worker_code
        {
            get
            {
                return _Worker_code;
            }
            set
            {
                OnWorker_codeChanging(value);
                ReportPropertyChanging("Worker_code");
                _Worker_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Worker_code");
                OnWorker_codeChanged();
            }
        }
        private global::System.String _Worker_code;
        partial void OnWorker_codeChanging(global::System.String value);
        partial void OnWorker_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Product_code
        {
            get
            {
                return _Product_code;
            }
            set
            {
                OnProduct_codeChanging(value);
                ReportPropertyChanging("Product_code");
                _Product_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Product_code");
                OnProduct_codeChanged();
            }
        }
        private global::System.String _Product_code;
        partial void OnProduct_codeChanging(global::System.String value);
        partial void OnProduct_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Number
        {
            get
            {
                return _Number;
            }
            set
            {
                OnNumberChanging(value);
                ReportPropertyChanging("Number");
                _Number = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Number");
                OnNumberChanged();
            }
        }
        private global::System.Int32 _Number;
        partial void OnNumberChanging(global::System.Int32 value);
        partial void OnNumberChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Контрагент", "Contractor")]
        public Contractor Contractor
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("AlcoStoreDBModel.FK_Накладная_Контрагент", "Contractor").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("AlcoStoreDBModel.FK_Накладная_Контрагент", "Contractor").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Contractor> ContractorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contractor>("AlcoStoreDBModel.FK_Накладная_Контрагент", "Contractor");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contractor>("AlcoStoreDBModel.FK_Накладная_Контрагент", "Contractor", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Завхоз", "Steward")]
        public Steward Steward
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Steward>("AlcoStoreDBModel.FK_Накладная_Завхоз", "Steward").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Steward>("AlcoStoreDBModel.FK_Накладная_Завхоз", "Steward").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Steward> StewardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Steward>("AlcoStoreDBModel.FK_Накладная_Завхоз", "Steward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Steward>("AlcoStoreDBModel.FK_Накладная_Завхоз", "Steward", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Накладная_Склад_Товар1", "Transaction_Warehouse_Product")]
        public Transaction_Warehouse_Product Transaction_Warehouse_Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction_Warehouse_Product>("AlcoStoreDBModel.FK_Накладная_Накладная_Склад_Товар1", "Transaction_Warehouse_Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction_Warehouse_Product>("AlcoStoreDBModel.FK_Накладная_Накладная_Склад_Товар1", "Transaction_Warehouse_Product").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction_Warehouse_Product> Transaction_Warehouse_ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction_Warehouse_Product>("AlcoStoreDBModel.FK_Накладная_Накладная_Склад_Товар1", "Transaction_Warehouse_Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction_Warehouse_Product>("AlcoStoreDBModel.FK_Накладная_Накладная_Склад_Товар1", "Transaction_Warehouse_Product", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Складовщики", "Workers")]
        public Workers Workers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workers>("AlcoStoreDBModel.FK_Накладная_Складовщики", "Workers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workers>("AlcoStoreDBModel.FK_Накладная_Складовщики", "Workers").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Workers> WorkersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Workers>("AlcoStoreDBModel.FK_Накладная_Складовщики", "Workers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Workers>("AlcoStoreDBModel.FK_Накладная_Складовщики", "Workers", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="Transaction_Warehouse_Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction_Warehouse_Product : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Transaction_Warehouse_Product.
        /// </summary>
        /// <param name="transaction_code">Исходное значение свойства Transaction_code.</param>
        /// <param name="product_code">Исходное значение свойства Product_code.</param>
        /// <param name="quantity_in_warehouse">Исходное значение свойства Quantity_in_warehouse.</param>
        public static Transaction_Warehouse_Product CreateTransaction_Warehouse_Product(global::System.String transaction_code, global::System.String product_code, global::System.Int32 quantity_in_warehouse)
        {
            Transaction_Warehouse_Product transaction_Warehouse_Product = new Transaction_Warehouse_Product();
            transaction_Warehouse_Product.Transaction_code = transaction_code;
            transaction_Warehouse_Product.Product_code = product_code;
            transaction_Warehouse_Product.Quantity_in_warehouse = quantity_in_warehouse;
            return transaction_Warehouse_Product;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Transaction_code
        {
            get
            {
                return _Transaction_code;
            }
            set
            {
                if (_Transaction_code != value)
                {
                    OnTransaction_codeChanging(value);
                    ReportPropertyChanging("Transaction_code");
                    _Transaction_code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Transaction_code");
                    OnTransaction_codeChanged();
                }
            }
        }
        private global::System.String _Transaction_code;
        partial void OnTransaction_codeChanging(global::System.String value);
        partial void OnTransaction_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Product_code
        {
            get
            {
                return _Product_code;
            }
            set
            {
                OnProduct_codeChanging(value);
                ReportPropertyChanging("Product_code");
                _Product_code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Product_code");
                OnProduct_codeChanged();
            }
        }
        private global::System.String _Product_code;
        partial void OnProduct_codeChanging(global::System.String value);
        partial void OnProduct_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity_in_warehouse
        {
            get
            {
                return _Quantity_in_warehouse;
            }
            set
            {
                OnQuantity_in_warehouseChanging(value);
                ReportPropertyChanging("Quantity_in_warehouse");
                _Quantity_in_warehouse = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity_in_warehouse");
                OnQuantity_in_warehouseChanged();
            }
        }
        private global::System.Int32 _Quantity_in_warehouse;
        partial void OnQuantity_in_warehouseChanging(global::System.Int32 value);
        partial void OnQuantity_in_warehouseChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Склад_Товар_Товар", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("AlcoStoreDBModel.FK_Накладная_Склад_Товар_Товар", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("AlcoStoreDBModel.FK_Накладная_Склад_Товар_Товар", "Product").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("AlcoStoreDBModel.FK_Накладная_Склад_Товар_Товар", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("AlcoStoreDBModel.FK_Накладная_Склад_Товар_Товар", "Product", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Накладная_Склад_Товар1", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("AlcoStoreDBModel.FK_Накладная_Накладная_Склад_Товар1", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("AlcoStoreDBModel.FK_Накладная_Накладная_Склад_Товар1", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("AlcoStoreDBModel.FK_Накладная_Накладная_Склад_Товар1", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("AlcoStoreDBModel.FK_Накладная_Накладная_Склад_Товар1", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="Warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Warehouse : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Warehouse.
        /// </summary>
        /// <param name="warehouse_number">Исходное значение свойства Warehouse_number.</param>
        /// <param name="product_code">Исходное значение свойства Product_code.</param>
        /// <param name="quantity_in_warehouse">Исходное значение свойства Quantity_in_warehouse.</param>
        public static Warehouse CreateWarehouse(global::System.String warehouse_number, global::System.String product_code, global::System.Int32 quantity_in_warehouse)
        {
            Warehouse warehouse = new Warehouse();
            warehouse.Warehouse_number = warehouse_number;
            warehouse.Product_code = product_code;
            warehouse.Quantity_in_warehouse = quantity_in_warehouse;
            return warehouse;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Warehouse_number
        {
            get
            {
                return _Warehouse_number;
            }
            set
            {
                if (_Warehouse_number != value)
                {
                    OnWarehouse_numberChanging(value);
                    ReportPropertyChanging("Warehouse_number");
                    _Warehouse_number = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Warehouse_number");
                    OnWarehouse_numberChanged();
                }
            }
        }
        private global::System.String _Warehouse_number;
        partial void OnWarehouse_numberChanging(global::System.String value);
        partial void OnWarehouse_numberChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Product_code
        {
            get
            {
                return _Product_code;
            }
            set
            {
                if (_Product_code != value)
                {
                    OnProduct_codeChanging(value);
                    ReportPropertyChanging("Product_code");
                    _Product_code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Product_code");
                    OnProduct_codeChanged();
                }
            }
        }
        private global::System.String _Product_code;
        partial void OnProduct_codeChanging(global::System.String value);
        partial void OnProduct_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity_in_warehouse
        {
            get
            {
                return _Quantity_in_warehouse;
            }
            set
            {
                if (_Quantity_in_warehouse != value)
                {
                    OnQuantity_in_warehouseChanging(value);
                    ReportPropertyChanging("Quantity_in_warehouse");
                    _Quantity_in_warehouse = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Quantity_in_warehouse");
                    OnQuantity_in_warehouseChanged();
                }
            }
        }
        private global::System.Int32 _Quantity_in_warehouse;
        partial void OnQuantity_in_warehouseChanging(global::System.Int32 value);
        partial void OnQuantity_in_warehouseChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Склад_Товар", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("AlcoStoreDBModel.FK_Склад_Товар", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("AlcoStoreDBModel.FK_Склад_Товар", "Product").Value = value;
            }
        }
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("AlcoStoreDBModel.FK_Склад_Товар", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("AlcoStoreDBModel.FK_Склад_Товар", "Product", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// Нет доступной документации по метаданным.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AlcoStoreDBModel", Name="Workers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Workers : EntityObject
    {
        #region Фабричный метод
    
        /// <summary>
        /// Создание нового объекта Workers.
        /// </summary>
        /// <param name="worker_code">Исходное значение свойства Worker_code.</param>
        /// <param name="surname">Исходное значение свойства Surname.</param>
        /// <param name="name">Исходное значение свойства Name.</param>
        /// <param name="middle_name">Исходное значение свойства Middle_name.</param>
        public static Workers CreateWorkers(global::System.String worker_code, global::System.String surname, global::System.String name, global::System.String middle_name)
        {
            Workers workers = new Workers();
            workers.Worker_code = worker_code;
            workers.Surname = surname;
            workers.Name = name;
            workers.Middle_name = middle_name;
            return workers;
        }

        #endregion

        #region Свойства-примитивы
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Worker_code
        {
            get
            {
                return _Worker_code;
            }
            set
            {
                if (_Worker_code != value)
                {
                    OnWorker_codeChanging(value);
                    ReportPropertyChanging("Worker_code");
                    _Worker_code = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("Worker_code");
                    OnWorker_codeChanged();
                }
            }
        }
        private global::System.String _Worker_code;
        partial void OnWorker_codeChanging(global::System.String value);
        partial void OnWorker_codeChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Surname
        {
            get
            {
                return _Surname;
            }
            set
            {
                OnSurnameChanging(value);
                ReportPropertyChanging("Surname");
                _Surname = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Surname");
                OnSurnameChanged();
            }
        }
        private global::System.String _Surname;
        partial void OnSurnameChanging(global::System.String value);
        partial void OnSurnameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Middle_name
        {
            get
            {
                return _Middle_name;
            }
            set
            {
                OnMiddle_nameChanging(value);
                ReportPropertyChanging("Middle_name");
                _Middle_name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Middle_name");
                OnMiddle_nameChanged();
            }
        }
        private global::System.String _Middle_name;
        partial void OnMiddle_nameChanging(global::System.String value);
        partial void OnMiddle_nameChanged();

        #endregion

    
        #region Свойства навигации
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Завхоз_Складовщики", "Steward")]
        public EntityCollection<Steward> Steward
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Steward>("AlcoStoreDBModel.FK_Завхоз_Складовщики", "Steward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Steward>("AlcoStoreDBModel.FK_Завхоз_Складовщики", "Steward", value);
                }
            }
        }
    
        /// <summary>
        /// Нет доступной документации по метаданным.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AlcoStoreDBModel", "FK_Накладная_Складовщики", "Transaction")]
        public EntityCollection<Transaction> Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("AlcoStoreDBModel.FK_Накладная_Складовщики", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("AlcoStoreDBModel.FK_Накладная_Складовщики", "Transaction", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
